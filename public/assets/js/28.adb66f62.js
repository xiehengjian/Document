(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{509:function(t,s,a){"use strict";a.r(s);var n=a(4),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是面向对象"}},[t._v("#")]),t._v(" 什么是面向对象")]),t._v(" "),a("ul",[a("li",[t._v("面向过程思想\n"),a("ul",[a("li",[t._v("步骤简单清晰，第一步做什么，第二步做什么")]),t._v(" "),a("li",[t._v("面对过程处理一些较为简单的问题")])])]),t._v(" "),a("li",[t._v("面向对象思想\n"),a("ul",[a("li",[t._v("物以类聚，分类的思维模式，思考问题首先会解决问题需要哪些分类，然后对这些分类进行单独思考。最后，才对某个分类下的细节进行面向过程的思索")]),t._v(" "),a("li",[t._v("面向对象适合处理复杂的问题，适合处理需要多人协作的问题")])])]),t._v(" "),a("li",[t._v("对于描述复杂的事物，为了从宏观上把握，从整体上合理分析，我们需要使用面向对象的思路来分析整个系统，但是，具体到微观操作，仍然需要面向过程的思路去处理")])]),t._v(" "),a("h2",{attrs:{id:"类与对象的创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类与对象的创建"}},[t._v("#")]),t._v(" 类与对象的创建")]),t._v(" "),a("h3",{attrs:{id:"创建与初始化对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建与初始化对象"}},[t._v("#")]),t._v(" 创建与初始化对象")]),t._v(" "),a("ul",[a("li",[t._v("==使用new关键字创建对象==")]),t._v(" "),a("li",[t._v("使用new关键字创建的时候，除了分配内存空间外，还会给创建好的对象进行默认的初始化以及对类中构造器的调用")]),t._v(" "),a("li",[t._v("类中的构造器也称为构造方法，是在进行创建对象的时候必须要调用的。并且构造器有以下俩个特点：\n"),a("ul",[a("li",[t._v("必须和类的名字相同")]),t._v(" "),a("li",[t._v("必须没有返回类型，也不能写void")])])])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性：字段")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("study")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"study"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"构造器详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造器详解"}},[t._v("#")]),t._v(" 构造器详解")]),t._v(" "),a("h2",{attrs:{id:"创建对象内存分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建对象内存分析"}},[t._v("#")]),t._v(" 创建对象内存分析")]),t._v(" "),a("h2",{attrs:{id:"封装继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装继承"}},[t._v("#")]),t._v(" 封装继承")]),t._v(" "),a("h3",{attrs:{id:"封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[t._v("#")]),t._v(" 封装")]),t._v(" "),a("ul",[a("li",[t._v("该露的露，该藏的藏\n"),a("ul",[a("li",[t._v("我们程序设计要追求“高内聚，低耦合“。高内聚就是类的内部数据操作细节自己完成，不允许外部干涉；低耦合：仅暴露少量的方法给外部使用")])])]),t._v(" "),a("li",[t._v("封装\n"),a("ul",[a("li",[t._v("通常，应该禁止直接访问一个对象中数据的实际表示，而应该通过操作接口来访问，这称为信息隐藏")])])]),t._v(" "),a("li",[t._v("==属性私有，get/set==")])]),t._v(" "),a("h3",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("继承的本质是对某一批类的抽象，从而实现对现实世界更好的建模")])]),t._v(" "),a("li",[a("p",[t._v("extends的意思是”扩展“。子类是父类的扩展。")])]),t._v(" "),a("li",[a("p",[t._v("JAVA类中只有单继承，没有多继承！")])]),t._v(" "),a("li",[a("p",[t._v("继承是类和类之间的一种关系。除此之外，类和类之间的关系还有依赖、组合、聚合等。")])]),t._v(" "),a("li",[a("p",[t._v("继承关系的两个类，一个为子类，一个为父类。子类继承父类，使用关键字extends来表示")])])]),t._v(" "),a("h2",{attrs:{id:"super详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#super详解"}},[t._v("#")]),t._v(" Super详解")]),t._v(" "),a("h2",{attrs:{id:"方法重写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法重写"}},[t._v("#")]),t._v(" 方法重写")]),t._v(" "),a("h2",{attrs:{id:"instanceof和类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instanceof和类型转换"}},[t._v("#")]),t._v(" instanceof和类型转换")]),t._v(" "),a("h2",{attrs:{id:"static关键字详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static关键字详解"}},[t._v("#")]),t._v(" static关键字详解")]),t._v(" "),a("h2",{attrs:{id:"抽象类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抽象类"}},[t._v("#")]),t._v(" 抽象类")]),t._v(" "),a("h2",{attrs:{id:"接口的定义和实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口的定义和实现"}},[t._v("#")]),t._v(" 接口的定义和实现")]),t._v(" "),a("h2",{attrs:{id:"n种内部类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n种内部类"}},[t._v("#")]),t._v(" N种内部类")])])}),[],!1,null,null,null);s.default=r.exports}}]);