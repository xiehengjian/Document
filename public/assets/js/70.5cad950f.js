(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{550:function(t,s,a){"use strict";a.r(s);var n=a(4),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[t._v("左程云老师所主著《程序员算法面试指南》的Golang实现")])]),t._v(" "),a("h2",{attrs:{id:"第一章-栈和队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-栈和队列"}},[t._v("#")]),t._v(" 第一章 栈和队列")]),t._v(" "),a("h3",{attrs:{id:"设计一个由getmin功能的栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计一个由getmin功能的栈"}},[t._v("#")]),t._v(" 设计一个由getMin功能的栈")]),t._v(" "),a("blockquote",[a("p",[t._v("实现一个特殊的栈,在实现栈的基本功能的基础上,再实现返回栈中最小元素的操作。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/min-stack/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v("实现一个结构体，其中包含两个栈，一个是正常栈，另一个是保存最小值的栈。")]),t._v(" "),a("p",[t._v("出栈入栈时，正常栈均正常出入，我们重点关注最小栈。")]),t._v(" "),a("p",[t._v("入栈时，如果入栈的值比当前最小值更小，则将其入最小栈")]),t._v(" "),a("p",[t._v("出栈时，如果当前出栈的值是最小值，则最小栈也出栈。")]),t._v(" "),a("p",[t._v("需要注意的是，当入栈的值等于当前最小值时，也需要将其入栈。否则，假设栈内最小值为x有两个，但min栈中只有一个x，当出栈一个x时，最小栈的唯一的x被出栈，而此时最小值仍是x。")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" MinStack "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stack "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n    min "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** initialize your data structure here. */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" MinStack "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" MinStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("MinStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    min"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetMin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("MinStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetMin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("MinStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("MinStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetMin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br")])]),a("h3",{attrs:{id:"由两个栈组成的队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#由两个栈组成的队列"}},[t._v("#")]),t._v(" 由两个栈组成的队列")]),t._v(" "),a("blockquote",[a("p",[t._v("编写一个类,用两个栈实现队列,支持队列的基本操作(add、poll、peek)")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v("利用栈的两次逆序变顺序来实现队列。")]),t._v(" "),a("p",[t._v("构造一个出栈一个入栈，当压入队列的时候，就压入入栈。")]),t._v(" "),a("p",[t._v("当出队列时，就从出栈里弹出元素")]),t._v(" "),a("p",[t._v("需要注意的是，当出栈里没有元素时，就将入栈里所有元素都给压入出栈，当两栈均空时，则没有元素了。")]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" CQueue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pushStack "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" \n    popStack "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" CQueue "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" CQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        pushStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        popStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("CQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AppendTail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushStack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("CQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DeleteHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushStack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pushStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("popStack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br")])]),a("h3",{attrs:{id:"如何仅用递归函数和栈操作逆序一个栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何仅用递归函数和栈操作逆序一个栈"}},[t._v("#")]),t._v(" 如何仅用递归函数和栈操作逆序一个栈")]),t._v(" "),a("blockquote",[a("p",[t._v("一个栈依次压入1、2、3、4、5,那么从栈顶到栈底分别为5、4、3、2、1。将这个栈转置后,从栈顶到栈底为1、2、3、4、5,也就是实现栈中元素的逆序,但是只能用递归函数来实现,不能用其他数据结构。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/1de82c89cc0e43e9aa6ee8243f4dbefd",target:"_blank",rel:"noopener noreferrer"}},[t._v("nowcoder"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tnum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scanln")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tstack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAndRemoveLastElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tresult"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlast"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAndRemoveLastElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" last\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ti"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAndRemoveLastElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br")])]),a("h3",{attrs:{id:"猫狗队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#猫狗队列"}},[t._v("#")]),t._v(" 猫狗队列")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/8a7e04cff6a54b7095b94261d78108f5",target:"_blank",rel:"noopener noreferrer"}},[t._v("nowcoder"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"用一个栈实现另一个栈的排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用一个栈实现另一个栈的排序"}},[t._v("#")]),t._v(" 用一个栈实现另一个栈的排序")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/ff8cba64e7894c5582deafa54cca8ff2",target:"_blank",rel:"noopener noreferrer"}},[t._v("nowcoder"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"用栈来求解汉诺塔问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用栈来求解汉诺塔问题"}},[t._v("#")]),t._v(" 用栈来求解汉诺塔问题")]),t._v(" "),a("blockquote",[a("p",[t._v("汉诺塔问题比较经典,这里修改一下游戏规则:现在限制不能从最左侧的塔直接移动到最右侧,也不能从最右侧直接移动到最左侧,而是必须经过中间。求当塔有N层的时候, 打印最优移动过程和最优移动总步数")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/hanota-lcci/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hanota")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfull"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tstep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("full"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tstep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\tB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tstep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\tA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tstep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\tC"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("step"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tstep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\tB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tC"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" C\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])]),a("h3",{attrs:{id:"生成窗口最大值数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成窗口最大值数组"}},[t._v("#")]),t._v(" 生成窗口最大值数组")]),t._v(" "),a("blockquote",[a("p",[t._v("给定一个数组 "),a("code",[t._v("nums")]),t._v(" 和滑动窗口的大小 "),a("code",[t._v("k")]),t._v("，请找出所有滑动窗口里的最大值。")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3\n输出: [3,3,5,5,6,7] \n解释: \n\n  滑动窗口的位置                最大值\n---------------               -----\n[1  3  -1] -3  5  3  6  7       3\n 1 [3  -1  -3] 5  3  6  7       3\n 1  3 [-1  -3  5] 3  6  7       5\n 1  3  -1 [-3  5  3] 6  7       5\n 1  3  -1  -3 [5  3  6] 7       6\n 1  3  -1  -3  5 [3  6  7]      7\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("maxSlidingWindow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    qmax"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建队列")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//保存结果")]),t._v("\n    index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历数组")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//出现了更大的值，")]),t._v("\n            qmax"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//就将小值弹出")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        qmax"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最大值过期")]),t._v("\n            qmax"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历到窗口")]),t._v("\n            \n            res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("qmax"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("h3",{attrs:{id:"构造数组的-max-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造数组的-max-tree"}},[t._v("#")]),t._v(" 构造数组的 Max Tree")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/a502c7c3c65e41fdaf65eec9e0654dcb",target:"_blank",rel:"noopener noreferrer"}},[t._v("nowcoder"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"求最大子矩阵的大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求最大子矩阵的大小"}},[t._v("#")]),t._v(" 求最大子矩阵的大小")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/a5a0b05f0505406ca837a3a76a5419b3",target:"_blank",rel:"noopener noreferrer"}},[t._v("nowcoder"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"最大值減去最小值小于或等于num的子数组数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最大值減去最小值小于或等于num的子数组数量"}},[t._v("#")]),t._v(" 最大值減去最小值小于或等于num的子数组数量")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/fe79f97c890c448ca8c5f7e0fb8aba9d%C3%9F",target:"_blank",rel:"noopener noreferrer"}},[t._v("newcoder"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"第二章-链表问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二章-链表问题"}},[t._v("#")]),t._v(" 第二章 链表问题")]),t._v(" "),a("h3",{attrs:{id:"打印两个有序链表的公共部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打印两个有序链表的公共部分"}},[t._v("#")]),t._v(" 打印两个有序链表的公共部分")]),t._v(" "),a("blockquote",[a("p",[t._v("给定两个有序链表的头指针 head I和head2,打印两个链表的公共部分。")])]),t._v(" "),a("h3",{attrs:{id:"在单链表和双链表中删除倒数第k个节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在单链表和双链表中删除倒数第k个节点"}},[t._v("#")]),t._v(" 在单链表和双链表中删除倒数第K个节点")]),t._v(" "),a("blockquote",[a("p",[t._v("分别实现两个函数,一个可以删除单链表中倒数第K个节点,另一个可以删除双链表中倒数第K个节点。")])]),t._v(" "),a("h3",{attrs:{id:"删除链表的中间节点和a-b处的节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除链表的中间节点和a-b处的节点"}},[t._v("#")]),t._v(" 删除链表的中间节点和a/b处的节点")]),t._v(" "),a("h3",{attrs:{id:"反转单向和双向链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反转单向和双向链表"}},[t._v("#")]),t._v(" 反转单向和双向链表")]),t._v(" "),a("h3",{attrs:{id:"反转部分单向链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反转部分单向链表"}},[t._v("#")]),t._v(" 反转部分单向链表")]),t._v(" "),a("h3",{attrs:{id:"环形单链表的约瑟夫问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环形单链表的约瑟夫问题"}},[t._v("#")]),t._v(" 环形单链表的约瑟夫问题")]),t._v(" "),a("h3",{attrs:{id:"判断一个链表是否为回文结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断一个链表是否为回文结构"}},[t._v("#")]),t._v(" 判断一个链表是否为回文结构")]),t._v(" "),a("h3",{attrs:{id:"将单向链表按某值划分成左边小、中间相等、右边大的形式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将单向链表按某值划分成左边小、中间相等、右边大的形式"}},[t._v("#")]),t._v(" 将单向链表按某值划分成左边小、中间相等、右边大的形式")]),t._v(" "),a("h3",{attrs:{id:"复制含有随机指针节点的链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制含有随机指针节点的链表"}},[t._v("#")]),t._v(" 复制含有随机指针节点的链表")]),t._v(" "),a("h3",{attrs:{id:"两个单链表生成相加链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个单链表生成相加链表"}},[t._v("#")]),t._v(" 两个单链表生成相加链表")]),t._v(" "),a("h3",{attrs:{id:"两个单链表相交的一系列问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个单链表相交的一系列问题"}},[t._v("#")]),t._v(" 两个单链表相交的一系列问题")]),t._v(" "),a("h3",{attrs:{id:"将单链表的每k个节点之间逆序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将单链表的每k个节点之间逆序"}},[t._v("#")]),t._v(" 将单链表的每K个节点之间逆序")]),t._v(" "),a("h3",{attrs:{id:"删除无序单链表中值重复出现的节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除无序单链表中值重复出现的节点"}},[t._v("#")]),t._v(" 删除无序单链表中值重复出现的节点")]),t._v(" "),a("h3",{attrs:{id:"在单链表中删除指定值的节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在单链表中删除指定值的节点"}},[t._v("#")]),t._v(" 在单链表中删除指定值的节点")]),t._v(" "),a("h3",{attrs:{id:"将搜索二叉树转換成双向链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将搜索二叉树转換成双向链表"}},[t._v("#")]),t._v(" 将搜索二叉树转換成双向链表")]),t._v(" "),a("h3",{attrs:{id:"单链表的选择排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单链表的选择排序"}},[t._v("#")]),t._v(" 单链表的选择排序")]),t._v(" "),a("h3",{attrs:{id:"一种怪异的节点删除方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一种怪异的节点删除方式"}},[t._v("#")]),t._v(" 一种怪异的节点删除方式")]),t._v(" "),a("h3",{attrs:{id:"向有序的环形单链表中插入新节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向有序的环形单链表中插入新节点"}},[t._v("#")]),t._v(" 向有序的环形单链表中插入新节点")]),t._v(" "),a("h3",{attrs:{id:"合并两个有序的单链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并两个有序的单链表"}},[t._v("#")]),t._v(" 合并两个有序的单链表")]),t._v(" "),a("h3",{attrs:{id:"按照左右半区的方式重新组合单链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按照左右半区的方式重新组合单链表"}},[t._v("#")]),t._v(" 按照左右半区的方式重新组合单链表")]),t._v(" "),a("h2",{attrs:{id:"第三章-二叉树问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三章-二叉树问题"}},[t._v("#")]),t._v(" 第三章 二叉树问题")]),t._v(" "),a("h3",{attrs:{id:"分别用递归和非递归方式实现二叉树先序、中序和后序遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分别用递归和非递归方式实现二叉树先序、中序和后序遍历"}},[t._v("#")]),t._v(" 分别用递归和非递归方式实现二叉树先序、中序和后序遍历")]),t._v(" "),a("h3",{attrs:{id:"打印二叉树的边界节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打印二叉树的边界节点"}},[t._v("#")]),t._v(" 打印二叉树的边界节点")]),t._v(" "),a("h3",{attrs:{id:"如何较为直观地打印二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何较为直观地打印二叉树"}},[t._v("#")]),t._v(" 如何较为直观地打印二叉树")]),t._v(" "),a("h3",{attrs:{id:"二叉树的序列化和反序列化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的序列化和反序列化"}},[t._v("#")]),t._v(" 二叉树的序列化和反序列化")]),t._v(" "),a("h3",{attrs:{id:"遍历二叉树的神级方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历二叉树的神级方法"}},[t._v("#")]),t._v(" 遍历二叉树的神级方法")]),t._v(" "),a("h3",{attrs:{id:"在二叉树中找到累加和为指定值的最长路径长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在二叉树中找到累加和为指定值的最长路径长度"}},[t._v("#")]),t._v(" 在二叉树中找到累加和为指定值的最长路径长度")]),t._v(" "),a("h3",{attrs:{id:"找到二叉树中的最大搜索二叉子树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到二叉树中的最大搜索二叉子树"}},[t._v("#")]),t._v(" 找到二叉树中的最大搜索二叉子树")]),t._v(" "),a("h3",{attrs:{id:"找到二又树中符合搜索二叉树条件的最大拓扑结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到二又树中符合搜索二叉树条件的最大拓扑结构"}},[t._v("#")]),t._v(" 找到二又树中符合搜索二叉树条件的最大拓扑结构")]),t._v(" "),a("h3",{attrs:{id:"二叉树的按层打印与-zigzag打印"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的按层打印与-zigzag打印"}},[t._v("#")]),t._v(" 二叉树的按层打印与 Zigzag打印")]),t._v(" "),a("h3",{attrs:{id:"调整搜索二叉树中两个错误的节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调整搜索二叉树中两个错误的节点"}},[t._v("#")]),t._v(" 调整搜索二叉树中两个错误的节点")]),t._v(" "),a("h3",{attrs:{id:"判断t1树是否包含t2树全部的拓扑结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断t1树是否包含t2树全部的拓扑结构"}},[t._v("#")]),t._v(" 判断t1树是否包含t2树全部的拓扑结构")]),t._v(" "),a("h3",{attrs:{id:"判断t1树中是否有与2树拓扑结构完全相同的子树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断t1树中是否有与2树拓扑结构完全相同的子树"}},[t._v("#")]),t._v(" 判断t1树中是否有与2树拓扑结构完全相同的子树")]),t._v(" "),a("h3",{attrs:{id:"判断二叉树是否为平衡二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断二叉树是否为平衡二叉树"}},[t._v("#")]),t._v(" 判断二叉树是否为平衡二叉树")]),t._v(" "),a("h3",{attrs:{id:"根据后序数组重建搜索二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据后序数组重建搜索二叉树"}},[t._v("#")]),t._v(" 根据后序数组重建搜索二叉树")]),t._v(" "),a("h3",{attrs:{id:"判断一棵二叉树是否为搜索二叉树和完全二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断一棵二叉树是否为搜索二叉树和完全二叉树"}},[t._v("#")]),t._v(" 判断一棵二叉树是否为搜索二叉树和完全二叉树")]),t._v(" "),a("h3",{attrs:{id:"通过有序数组生成平衡搜索二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过有序数组生成平衡搜索二叉树"}},[t._v("#")]),t._v(" 通过有序数组生成平衡搜索二叉树")]),t._v(" "),a("h3",{attrs:{id:"在二叉树中找到一个节点的后继节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在二叉树中找到一个节点的后继节点"}},[t._v("#")]),t._v(" 在二叉树中找到一个节点的后继节点")]),t._v(" "),a("h3",{attrs:{id:"在二又树中找到两个节点的最近公共祖先"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在二又树中找到两个节点的最近公共祖先"}},[t._v("#")]),t._v(" 在二又树中找到两个节点的最近公共祖先")]),t._v(" "),a("h3",{attrs:{id:"tarjan算法与并查集解决二叉树节点间最近公共祖先的批量查询问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tarjan算法与并查集解决二叉树节点间最近公共祖先的批量查询问题"}},[t._v("#")]),t._v(" Tarjan算法与并查集解决二叉树节点间最近公共祖先的批量查询问题")]),t._v(" "),a("h3",{attrs:{id:"二叉树节点间的最大距离问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二叉树节点间的最大距离问题"}},[t._v("#")]),t._v(" 二叉树节点间的最大距离问题")]),t._v(" "),a("h3",{attrs:{id:"先序、中序和后序数组两两结合重构二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先序、中序和后序数组两两结合重构二叉树"}},[t._v("#")]),t._v(" 先序、中序和后序数组两两结合重构二叉树")]),t._v(" "),a("h3",{attrs:{id:"通过先序和中序数组生成后序数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过先序和中序数组生成后序数组"}},[t._v("#")]),t._v(" 通过先序和中序数组生成后序数组")]),t._v(" "),a("h3",{attrs:{id:"统计和生成所有不同的二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计和生成所有不同的二叉树"}},[t._v("#")]),t._v(" 统计和生成所有不同的二叉树")]),t._v(" "),a("h3",{attrs:{id:"统计完全二叉树的节点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计完全二叉树的节点数"}},[t._v("#")]),t._v(" 统计完全二叉树的节点数")]),t._v(" "),a("h2",{attrs:{id:"第四章-递归和动态规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四章-递归和动态规划"}},[t._v("#")]),t._v(" 第四章 递归和动态规划")]),t._v(" "),a("h3",{attrs:{id:"斐波那契系列问题的递归和动态规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#斐波那契系列问题的递归和动态规划"}},[t._v("#")]),t._v(" 斐波那契系列问题的递归和动态规划")]),t._v(" "),a("h3",{attrs:{id:"矩阵的最小路径和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#矩阵的最小路径和"}},[t._v("#")]),t._v(" 矩阵的最小路径和")]),t._v(" "),a("h3",{attrs:{id:"换钱的最少货币数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#换钱的最少货币数"}},[t._v("#")]),t._v(" 换钱的最少货币数")]),t._v(" "),a("h3",{attrs:{id:"换钱的方法数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#换钱的方法数"}},[t._v("#")]),t._v(" 换钱的方法数")]),t._v(" "),a("h3",{attrs:{id:"最长递增子序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最长递增子序列"}},[t._v("#")]),t._v(" 最长递增子序列")]),t._v(" "),a("h3",{attrs:{id:"汉诺塔问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#汉诺塔问题"}},[t._v("#")]),t._v(" 汉诺塔问题")]),t._v(" "),a("h3",{attrs:{id:"最长公共子序列问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最长公共子序列问题"}},[t._v("#")]),t._v(" 最长公共子序列问题")]),t._v(" "),a("h3",{attrs:{id:"最长公共子串问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最长公共子串问题"}},[t._v("#")]),t._v(" 最长公共子串问题")]),t._v(" "),a("h3",{attrs:{id:"最小编辑代价"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小编辑代价"}},[t._v("#")]),t._v(" 最小编辑代价")]),t._v(" "),a("h3",{attrs:{id:"字符串的交错组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的交错组成"}},[t._v("#")]),t._v(" 字符串的交错组成")]),t._v(" "),a("h3",{attrs:{id:"龙与地下城游戏问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#龙与地下城游戏问题"}},[t._v("#")]),t._v(" 龙与地下城游戏问题")]),t._v(" "),a("h3",{attrs:{id:"数字字符串转换为字母组合的种数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字字符串转换为字母组合的种数"}},[t._v("#")]),t._v(" 数字字符串转换为字母组合的种数")]),t._v(" "),a("h3",{attrs:{id:"表达式得到期望结果的组成种数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式得到期望结果的组成种数"}},[t._v("#")]),t._v(" 表达式得到期望结果的组成种数")]),t._v(" "),a("h3",{attrs:{id:"排成一条线的纸牌博弈问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排成一条线的纸牌博弈问题"}},[t._v("#")]),t._v(" 排成一条线的纸牌博弈问题")]),t._v(" "),a("h3",{attrs:{id:"跳跃游戏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跳跃游戏"}},[t._v("#")]),t._v(" 跳跃游戏")]),t._v(" "),a("h3",{attrs:{id:"数组中的最长连续序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组中的最长连续序列"}},[t._v("#")]),t._v(" 数组中的最长连续序列")]),t._v(" "),a("h3",{attrs:{id:"n皇后问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n皇后问题"}},[t._v("#")]),t._v(" N皇后问题")]),t._v(" "),a("h2",{attrs:{id:"第五章-字符串问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五章-字符串问题"}},[t._v("#")]),t._v(" 第五章 字符串问题")]),t._v(" "),a("h3",{attrs:{id:"判断两个字符串是否互为变形词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断两个字符串是否互为变形词"}},[t._v("#")]),t._v(" 判断两个字符串是否互为变形词")]),t._v(" "),a("h3",{attrs:{id:"字符串中数字子串的求和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串中数字子串的求和"}},[t._v("#")]),t._v(" 字符串中数字子串的求和")]),t._v(" "),a("h3",{attrs:{id:"去掉字符串中连续出现k个0的子串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去掉字符串中连续出现k个0的子串"}},[t._v("#")]),t._v(" 去掉字符串中连续出现k个0的子串")]),t._v(" "),a("h3",{attrs:{id:"判断两个字符串是否互为旋转词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断两个字符串是否互为旋转词"}},[t._v("#")]),t._v(" 判断两个字符串是否互为旋转词")]),t._v(" "),a("h3",{attrs:{id:"将整数字符串转成整数值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将整数字符串转成整数值"}},[t._v("#")]),t._v(" 将整数字符串转成整数值")]),t._v(" "),a("h3",{attrs:{id:"替换字符串中连续出现的指定字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换字符串中连续出现的指定字符串"}},[t._v("#")]),t._v(" 替换字符串中连续出现的指定字符串")]),t._v(" "),a("h3",{attrs:{id:"字符串的统计字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的统计字符串"}},[t._v("#")]),t._v(" 字符串的统计字符串")]),t._v(" "),a("h3",{attrs:{id:"判断字符数组中是否所有的字符都只出现过一次"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断字符数组中是否所有的字符都只出现过一次"}},[t._v("#")]),t._v(" 判断字符数组中是否所有的字符都只出现过一次")]),t._v(" "),a("h3",{attrs:{id:"在有序但含有空的数组中查找字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在有序但含有空的数组中查找字符串"}},[t._v("#")]),t._v(" 在有序但含有空的数组中查找字符串")]),t._v(" "),a("h3",{attrs:{id:"字符串的调整与替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的调整与替换"}},[t._v("#")]),t._v(" 字符串的调整与替换")]),t._v(" "),a("h3",{attrs:{id:"翻转字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#翻转字符串"}},[t._v("#")]),t._v(" 翻转字符串")]),t._v(" "),a("h3",{attrs:{id:"数组中两个字符串的最小距离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组中两个字符串的最小距离"}},[t._v("#")]),t._v(" 数组中两个字符串的最小距离")]),t._v(" "),a("h3",{attrs:{id:"添加最小字符使字符串整体都是回文字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加最小字符使字符串整体都是回文字符串"}},[t._v("#")]),t._v(" 添加最小字符使字符串整体都是回文字符串")]),t._v(" "),a("h3",{attrs:{id:"括号字符串的有效性和最长有效长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#括号字符串的有效性和最长有效长度"}},[t._v("#")]),t._v(" 括号字符串的有效性和最长有效长度")]),t._v(" "),a("h3",{attrs:{id:"公式字符串求值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公式字符串求值"}},[t._v("#")]),t._v(" 公式字符串求值")]),t._v(" "),a("h3",{attrs:{id:"_0左边必有1的二进制字符串数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0左边必有1的二进制字符串数量"}},[t._v("#")]),t._v(" 0左边必有1的二进制字符串数量")]),t._v(" "),a("h3",{attrs:{id:"拼接所有字符串产生字典顺序最小的大写字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼接所有字符串产生字典顺序最小的大写字符串"}},[t._v("#")]),t._v(" 拼接所有字符串产生字典顺序最小的大写字符串")]),t._v(" "),a("h3",{attrs:{id:"找到字符串的最长无重复字符子串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到字符串的最长无重复字符子串"}},[t._v("#")]),t._v(" 找到字符串的最长无重复字符子串")]),t._v(" "),a("h3",{attrs:{id:"找到被指的新类型字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到被指的新类型字符"}},[t._v("#")]),t._v(" 找到被指的新类型字符")]),t._v(" "),a("h3",{attrs:{id:"最小包含子串的长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小包含子串的长度"}},[t._v("#")]),t._v(" 最小包含子串的长度")]),t._v(" "),a("h3",{attrs:{id:"回文最少分割树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回文最少分割树"}},[t._v("#")]),t._v(" 回文最少分割树")]),t._v(" "),a("h3",{attrs:{id:"字符串匹配问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串匹配问题"}},[t._v("#")]),t._v(" 字符串匹配问题")]),t._v(" "),a("h3",{attrs:{id:"字典树（前缀树）的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典树（前缀树）的实现"}},[t._v("#")]),t._v(" 字典树（前缀树）的实现")]),t._v(" "),a("h2",{attrs:{id:"第六章-大数据和空间限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六章-大数据和空间限制"}},[t._v("#")]),t._v(" 第六章 大数据和空间限制")]),t._v(" "),a("h3",{attrs:{id:"认识布隆过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认识布隆过滤器"}},[t._v("#")]),t._v(" 认识布隆过滤器")]),t._v(" "),a("h3",{attrs:{id:"只用2gb内存在20亿个整数中找到出现次数最多的数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只用2gb内存在20亿个整数中找到出现次数最多的数"}},[t._v("#")]),t._v(" 只用2GB内存在20亿个整数中找到出现次数最多的数")]),t._v(" "),a("h3",{attrs:{id:"_40亿个非负整数中找到没出现的数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_40亿个非负整数中找到没出现的数"}},[t._v("#")]),t._v(" 40亿个非负整数中找到没出现的数")]),t._v(" "),a("h3",{attrs:{id:"找到100亿个url中重复的url以及搜索词汇的top-k问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到100亿个url中重复的url以及搜索词汇的top-k问题"}},[t._v("#")]),t._v(" 找到100亿个URL中重复的URL以及搜索词汇的top K问题")]),t._v(" "),a("h3",{attrs:{id:"_40亿个非负整数中找到出现两次的数和所有数的中位数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_40亿个非负整数中找到出现两次的数和所有数的中位数"}},[t._v("#")]),t._v(" 40亿个非负整数中找到出现两次的数和所有数的中位数")]),t._v(" "),a("h3",{attrs:{id:"一致性哈希算法的基本原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一致性哈希算法的基本原理"}},[t._v("#")]),t._v(" 一致性哈希算法的基本原理")]),t._v(" "),a("h2",{attrs:{id:"第七章-位运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第七章-位运算"}},[t._v("#")]),t._v(" 第七章 位运算")]),t._v(" "),a("h3",{attrs:{id:"不用额外变量交换两个整数的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不用额外变量交换两个整数的值"}},[t._v("#")]),t._v(" 不用额外变量交换两个整数的值")]),t._v(" "),a("h3",{attrs:{id:"不用任何比较判断找出两个数中较大的数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不用任何比较判断找出两个数中较大的数"}},[t._v("#")]),t._v(" 不用任何比较判断找出两个数中较大的数")]),t._v(" "),a("h3",{attrs:{id:"只用位运算不用算术运算实现整数的加减乘除运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只用位运算不用算术运算实现整数的加减乘除运算"}},[t._v("#")]),t._v(" 只用位运算不用算术运算实现整数的加减乘除运算")]),t._v(" "),a("h3",{attrs:{id:"整数的二进制表达式中有多少个1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数的二进制表达式中有多少个1"}},[t._v("#")]),t._v(" 整数的二进制表达式中有多少个1")]),t._v(" "),a("h3",{attrs:{id:"在其他数都出现偶数次的数组中找到出现奇数次的数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在其他数都出现偶数次的数组中找到出现奇数次的数"}},[t._v("#")]),t._v(" 在其他数都出现偶数次的数组中找到出现奇数次的数")]),t._v(" "),a("h3",{attrs:{id:"在其他数都出现k次的数组中找到只出现一次的数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在其他数都出现k次的数组中找到只出现一次的数"}},[t._v("#")]),t._v(" 在其他数都出现K次的数组中找到只出现一次的数")]),t._v(" "),a("h2",{attrs:{id:"第八章-数组和矩阵问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第八章-数组和矩阵问题"}},[t._v("#")]),t._v(" 第八章 数组和矩阵问题")]),t._v(" "),a("h3",{attrs:{id:"转圈打印矩阵"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转圈打印矩阵"}},[t._v("#")]),t._v(" 转圈打印矩阵")]),t._v(" "),a("h3",{attrs:{id:"将正方形矩阵顺时针转动90°"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将正方形矩阵顺时针转动90°"}},[t._v("#")]),t._v(" 将正方形矩阵顺时针转动90°")]),t._v(" "),a("h3",{attrs:{id:"之-字形打印矩阵"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#之-字形打印矩阵"}},[t._v("#")]),t._v(" “之”字形打印矩阵")]),t._v(" "),a("h3",{attrs:{id:"找到无序数组中最小的k个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到无序数组中最小的k个数"}},[t._v("#")]),t._v(" 找到无序数组中最小的K个数")]),t._v(" "),a("h3",{attrs:{id:"需要排序的最短子数组长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要排序的最短子数组长度"}},[t._v("#")]),t._v(" 需要排序的最短子数组长度")]),t._v(" "),a("h3",{attrs:{id:"在数组中找到出现次数大于n-k的数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在数组中找到出现次数大于n-k的数"}},[t._v("#")]),t._v(" 在数组中找到出现次数大于N/K的数")]),t._v(" "),a("h3",{attrs:{id:"在行列都排好序的矩阵中找数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在行列都排好序的矩阵中找数"}},[t._v("#")]),t._v(" 在行列都排好序的矩阵中找数")]),t._v(" "),a("h3",{attrs:{id:"最长的可整合子数组的长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最长的可整合子数组的长度"}},[t._v("#")]),t._v(" 最长的可整合子数组的长度")]),t._v(" "),a("h3",{attrs:{id:"不重复打印排序数组中相加和为给定值的所有二元组和三元组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不重复打印排序数组中相加和为给定值的所有二元组和三元组"}},[t._v("#")]),t._v(" 不重复打印排序数组中相加和为给定值的所有二元组和三元组")]),t._v(" "),a("h3",{attrs:{id:"未排序正数数组中累加和为给定值的最长子数组长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未排序正数数组中累加和为给定值的最长子数组长度"}},[t._v("#")]),t._v(" 未排序正数数组中累加和为给定值的最长子数组长度")]),t._v(" "),a("h3",{attrs:{id:"未排序数组中累加和为给定值的最长子数组系列问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未排序数组中累加和为给定值的最长子数组系列问题"}},[t._v("#")]),t._v(" 未排序数组中累加和为给定值的最长子数组系列问题")]),t._v(" "),a("h3",{attrs:{id:"未排序数组中累加和小于或等于给定值的最长子数组长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未排序数组中累加和小于或等于给定值的最长子数组长度"}},[t._v("#")]),t._v(" 未排序数组中累加和小于或等于给定值的最长子数组长度")]),t._v(" "),a("h3",{attrs:{id:"计算数组的最小和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算数组的最小和"}},[t._v("#")]),t._v(" 计算数组的最小和")]),t._v(" "),a("h3",{attrs:{id:"自然数数组的排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自然数数组的排序"}},[t._v("#")]),t._v(" 自然数数组的排序")]),t._v(" "),a("h3",{attrs:{id:"奇数下标都是奇数或者偶数下标都是偶数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#奇数下标都是奇数或者偶数下标都是偶数"}},[t._v("#")]),t._v(" 奇数下标都是奇数或者偶数下标都是偶数")]),t._v(" "),a("h3",{attrs:{id:"子数组的最大累加和问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子数组的最大累加和问题"}},[t._v("#")]),t._v(" 子数组的最大累加和问题")]),t._v(" "),a("h3",{attrs:{id:"子矩阵的最大累加和问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子矩阵的最大累加和问题"}},[t._v("#")]),t._v(" 子矩阵的最大累加和问题")]),t._v(" "),a("h3",{attrs:{id:"在数组中找到一个局部最小的位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在数组中找到一个局部最小的位置"}},[t._v("#")]),t._v(" 在数组中找到一个局部最小的位置")]),t._v(" "),a("h3",{attrs:{id:"数组中子数组的最大累乘积"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组中子数组的最大累乘积"}},[t._v("#")]),t._v(" 数组中子数组的最大累乘积")]),t._v(" "),a("h3",{attrs:{id:"打印n个数组整体最大的top-k"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打印n个数组整体最大的top-k"}},[t._v("#")]),t._v(" 打印N个数组整体最大的Top K")]),t._v(" "),a("h3",{attrs:{id:"边界都是1的最大正方形大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#边界都是1的最大正方形大小"}},[t._v("#")]),t._v(" 边界都是1的最大正方形大小")]),t._v(" "),a("h3",{attrs:{id:"不包含本位置值的累乘数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不包含本位置值的累乘数组"}},[t._v("#")]),t._v(" 不包含本位置值的累乘数组")]),t._v(" "),a("h3",{attrs:{id:"数组的partition调整"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的partition调整"}},[t._v("#")]),t._v(" 数组的partition调整")]),t._v(" "),a("h3",{attrs:{id:"求最短通路值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求最短通路值"}},[t._v("#")]),t._v(" 求最短通路值")]),t._v(" "),a("h3",{attrs:{id:"数组中未出现的最小正整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组中未出现的最小正整数"}},[t._v("#")]),t._v(" 数组中未出现的最小正整数")]),t._v(" "),a("h3",{attrs:{id:"数组排序之后的相邻数的最大差值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组排序之后的相邻数的最大差值"}},[t._v("#")]),t._v(" 数组排序之后的相邻数的最大差值")]),t._v(" "),a("h2",{attrs:{id:"第九章-其他题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第九章-其他题目"}},[t._v("#")]),t._v(" 第九章 其他题目")]),t._v(" "),a("h3",{attrs:{id:"从5随机到7随机及其扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从5随机到7随机及其扩展"}},[t._v("#")]),t._v(" 从5随机到7随机及其扩展")]),t._v(" "),a("h3",{attrs:{id:"一行代码求两个数的最大公约数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一行代码求两个数的最大公约数"}},[t._v("#")]),t._v(" 一行代码求两个数的最大公约数")]),t._v(" "),a("h3",{attrs:{id:"有关阶乘的两个问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有关阶乘的两个问题"}},[t._v("#")]),t._v(" 有关阶乘的两个问题")]),t._v(" "),a("h3",{attrs:{id:"判断一个点是否在矩形内部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断一个点是否在矩形内部"}},[t._v("#")]),t._v(" 判断一个点是否在矩形内部")]),t._v(" "),a("h3",{attrs:{id:"判断一个点是否在三角形内部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断一个点是否在三角形内部"}},[t._v("#")]),t._v(" 判断一个点是否在三角形内部")]),t._v(" "),a("h3",{attrs:{id:"折纸问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#折纸问题"}},[t._v("#")]),t._v(" 折纸问题")]),t._v(" "),a("h3",{attrs:{id:"蓄水池算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蓄水池算法"}},[t._v("#")]),t._v(" 蓄水池算法")]),t._v(" "),a("h3",{attrs:{id:"设计有setall功能的哈希表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计有setall功能的哈希表"}},[t._v("#")]),t._v(" 设计有setAll功能的哈希表")]),t._v(" "),a("h3",{attrs:{id:"最大的leftmax与rightmax之差的绝对值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最大的leftmax与rightmax之差的绝对值"}},[t._v("#")]),t._v(" 最大的leftMax与rightMax之差的绝对值")]),t._v(" "),a("h3",{attrs:{id:"设计可以变更的缓存结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计可以变更的缓存结构"}},[t._v("#")]),t._v(" 设计可以变更的缓存结构")]),t._v(" "),a("h3",{attrs:{id:"设计randompool结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计randompool结构"}},[t._v("#")]),t._v(" 设计RandomPool结构")]),t._v(" "),a("h3",{attrs:{id:"调整-0-x-区间上的数出现的概率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调整-0-x-区间上的数出现的概率"}},[t._v("#")]),t._v(" 调整[0,x)区间上的数出现的概率")]),t._v(" "),a("h3",{attrs:{id:"路径数组变为统计数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径数组变为统计数组"}},[t._v("#")]),t._v(" 路径数组变为统计数组")]),t._v(" "),a("h3",{attrs:{id:"正数数组的最小不可组成和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正数数组的最小不可组成和"}},[t._v("#")]),t._v(" 正数数组的最小不可组成和")]),t._v(" "),a("h3",{attrs:{id:"一种字符串和数字的对应关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一种字符串和数字的对应关系"}},[t._v("#")]),t._v(" 一种字符串和数字的对应关系")]),t._v(" "),a("h3",{attrs:{id:"_1到n中1出现的次数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1到n中1出现的次数"}},[t._v("#")]),t._v(" 1到n中1出现的次数")]),t._v(" "),a("h3",{attrs:{id:"从n个数中等概率打印m个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从n个数中等概率打印m个数"}},[t._v("#")]),t._v(" 从N个数中等概率打印M个数")]),t._v(" "),a("h3",{attrs:{id:"判断一个数是否是回文数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断一个数是否是回文数"}},[t._v("#")]),t._v(" 判断一个数是否是回文数")]),t._v(" "),a("h3",{attrs:{id:"在有序旋转数组中找到最小值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在有序旋转数组中找到最小值"}},[t._v("#")]),t._v(" 在有序旋转数组中找到最小值")]),t._v(" "),a("h3",{attrs:{id:"在有序旋转数组中找到一个数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在有序旋转数组中找到一个数"}},[t._v("#")]),t._v(" 在有序旋转数组中找到一个数")]),t._v(" "),a("h3",{attrs:{id:"数字的英文表达和中文表达"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字的英文表达和中文表达"}},[t._v("#")]),t._v(" 数字的英文表达和中文表达")]),t._v(" "),a("h3",{attrs:{id:"分糖果问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分糖果问题"}},[t._v("#")]),t._v(" 分糖果问题")]),t._v(" "),a("h3",{attrs:{id:"一种消息接收并打印的结构设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一种消息接收并打印的结构设计"}},[t._v("#")]),t._v(" 一种消息接收并打印的结构设计")]),t._v(" "),a("h3",{attrs:{id:"设计一个没有扩容负担的堆结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计一个没有扩容负担的堆结构"}},[t._v("#")]),t._v(" 设计一个没有扩容负担的堆结构")]),t._v(" "),a("h3",{attrs:{id:"随时找到数据流的中位数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随时找到数据流的中位数"}},[t._v("#")]),t._v(" 随时找到数据流的中位数")]),t._v(" "),a("h3",{attrs:{id:"在两个长度相等的排序数组中找到上中位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在两个长度相等的排序数组中找到上中位"}},[t._v("#")]),t._v(" 在两个长度相等的排序数组中找到上中位")]),t._v(" "),a("h3",{attrs:{id:"在两个排序数组中找到第k小的数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在两个排序数组中找到第k小的数"}},[t._v("#")]),t._v(" 在两个排序数组中找到第K小的数")]),t._v(" "),a("h3",{attrs:{id:"两个有序数组间相加和的top-k问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个有序数组间相加和的top-k问题"}},[t._v("#")]),t._v(" 两个有序数组间相加和的TOP K问题")]),t._v(" "),a("h3",{attrs:{id:"出现次数的top-k问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现次数的top-k问题"}},[t._v("#")]),t._v(" 出现次数的TOP K问题")]),t._v(" "),a("h3",{attrs:{id:"manacher算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manacher算法"}},[t._v("#")]),t._v(" Manacher算法")]),t._v(" "),a("h3",{attrs:{id:"kmp算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kmp算法"}},[t._v("#")]),t._v(" KMP算法")]),t._v(" "),a("h3",{attrs:{id:"丢棋子问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#丢棋子问题"}},[t._v("#")]),t._v(" 丢棋子问题")]),t._v(" "),a("h3",{attrs:{id:"画匠问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#画匠问题"}},[t._v("#")]),t._v(" 画匠问题")]),t._v(" "),a("h3",{attrs:{id:"邮局选址问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#邮局选址问题"}},[t._v("#")]),t._v(" 邮局选址问题")])])}),[],!1,null,null,null);s.default=r.exports}}]);