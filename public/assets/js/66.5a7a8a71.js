(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{542:function(a,t,s){"use strict";s.r(t);var r=s(4),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",[a._v("左程云老师所主著《程序员算法面试指南》的Golang实现")])]),a._v(" "),s("h2",{attrs:{id:"第一章-栈和队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一章-栈和队列"}},[a._v("#")]),a._v(" 第一章 栈和队列")]),a._v(" "),s("h3",{attrs:{id:"设计一个由getmin功能的栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计一个由getmin功能的栈"}},[a._v("#")]),a._v(" 设计一个由getMin功能的栈")]),a._v(" "),s("h3",{attrs:{id:"由两个栈组成的队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由两个栈组成的队列"}},[a._v("#")]),a._v(" 由两个栈组成的队列")]),a._v(" "),s("h3",{attrs:{id:"如何仅用递归函数和栈操作逆序一个栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何仅用递归函数和栈操作逆序一个栈"}},[a._v("#")]),a._v(" 如何仅用递归函数和栈操作逆序一个栈")]),a._v(" "),s("h3",{attrs:{id:"猫狗队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#猫狗队列"}},[a._v("#")]),a._v(" 猫狗队列")]),a._v(" "),s("h3",{attrs:{id:"用一个栈实现另一个栈的排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用一个栈实现另一个栈的排序"}},[a._v("#")]),a._v(" 用一个栈实现另一个栈的排序")]),a._v(" "),s("h3",{attrs:{id:"用栈来求解汉诺塔问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用栈来求解汉诺塔问题"}},[a._v("#")]),a._v(" 用栈来求解汉诺塔问题")]),a._v(" "),s("h3",{attrs:{id:"生成窗口最大值数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成窗口最大值数组"}},[a._v("#")]),a._v(" 生成窗口最大值数组")]),a._v(" "),s("h3",{attrs:{id:"构造数组的-max-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造数组的-max-tree"}},[a._v("#")]),a._v(" 构造数组的 Max Tree")]),a._v(" "),s("h3",{attrs:{id:"求最大子矩阵的大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#求最大子矩阵的大小"}},[a._v("#")]),a._v(" 求最大子矩阵的大小")]),a._v(" "),s("h3",{attrs:{id:"最大值減去最小值小于或等于num的子数组数量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最大值減去最小值小于或等于num的子数组数量"}},[a._v("#")]),a._v(" 最大值減去最小值小于或等于num的子数组数量")]),a._v(" "),s("h2",{attrs:{id:"第二章-链表问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二章-链表问题"}},[a._v("#")]),a._v(" 第二章 链表问题")]),a._v(" "),s("h2",{attrs:{id:"第三章-二叉树问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-二叉树问题"}},[a._v("#")]),a._v(" 第三章 二叉树问题")]),a._v(" "),s("h2",{attrs:{id:"第四章-递归和动态规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四章-递归和动态规划"}},[a._v("#")]),a._v(" 第四章 递归和动态规划")]),a._v(" "),s("h2",{attrs:{id:"第五章-字符串问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五章-字符串问题"}},[a._v("#")]),a._v(" 第五章 字符串问题")]),a._v(" "),s("h2",{attrs:{id:"第六章-大数据和空间限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第六章-大数据和空间限制"}},[a._v("#")]),a._v(" 第六章 大数据和空间限制")]),a._v(" "),s("h2",{attrs:{id:"第七章-位运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七章-位运算"}},[a._v("#")]),a._v(" 第七章 位运算")]),a._v(" "),s("h2",{attrs:{id:"第八章-数组和矩阵问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第八章-数组和矩阵问题"}},[a._v("#")]),a._v(" 第八章 数组和矩阵问题")]),a._v(" "),s("h2",{attrs:{id:"第九章-其他题目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第九章-其他题目"}},[a._v("#")]),a._v(" 第九章 其他题目")])])}),[],!1,null,null,null);t.default=e.exports}}]);