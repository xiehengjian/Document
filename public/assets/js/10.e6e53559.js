(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{490:function(a,t,r){"use strict";r.r(t);var s=r(4),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("p",[r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/136345843",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考答案"),r("OutboundLink")],1)]),a._v(" "),r("h2",{attrs:{id:"基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[a._v("#")]),a._v(" 基础")]),a._v(" "),r("h3",{attrs:{id:"_1-django的优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-django的优点"}},[a._v("#")]),a._v(" 1. Django的优点")]),a._v(" "),r("ul",[r("li",[a._v("功能完善、要素齐全：自带大量企业Web开发常用工具和框架（比如分页，auth，权限管理), 适合快速开发企业级网站。")]),a._v(" "),r("li",[a._v("完善的文档：经过十多年的发展和完善，Django有广泛的实践案例和完善的在线文档。开发者遇到问题时可以搜索在线文档寻求解决方案。")]),a._v(" "),r("li",[a._v("强大的数据库访问组件：Django的Model层自带数据库ORM组件，使得开发者无须学习SQL语言即可对数据库进行操作。")]),a._v(" "),r("li",[a._v("Django先进的App设计理念: App是可插拔的，是不可多得的思想。不需要了，可以直接删除，对系统整体影响不大。")]),a._v(" "),r("li",[a._v("自带台管理系统admin：只需要通过简单的几行配置和代码就可以实现一个完整的后台数据管理控制平台。")])]),a._v(" "),r("h3",{attrs:{id:"_2-django的缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-django的缺点"}},[a._v("#")]),a._v(" 2. Django的缺点")]),a._v(" "),r("ul",[r("li",[a._v("大包大揽: 对于一些轻量级应用不需要的功能模块Django也包括了，不如Flask轻便。")]),a._v(" "),r("li",[a._v("过度封装: 很多类和方法都封装了，直接使用比较简单，但改动起来就比较困难。")]),a._v(" "),r("li",[a._v("性能劣势: 与C, C++性能上相比，Django性能偏低，当然这是python的锅，其它python框架在流量上来后会有同样问题。")]),a._v(" "),r("li",[a._v("模板问题: django的模板实现了代码和样式完全分离，不允许模板里出现python代码，灵活度对某些程序员来说可能不够。")])]),a._v(" "),r("h3",{attrs:{id:"_3-django的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-django的生命周期"}},[a._v("#")]),a._v(" 3.Django的生命周期")]),a._v(" "),r("p",[a._v("最重要的是回答用户请求并不是一下子通过URL匹配就达到相应视图，返回数据也不是一下子就返回给用户，中间要经历层层中间件。这个面试题其实考的核心是中间件。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://pic4.zhimg.com/80/v2-ed1ee3a6a6fd15b98f86bdd862c62de3_1440w.jpg",alt:"img"}})]),a._v(" "),r("h3",{attrs:{id:"_4-简单说说看-django的csrf防御机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-简单说说看-django的csrf防御机制"}},[a._v("#")]),a._v(" 4.简单说说看 Django的CSRF防御机制")]),a._v(" "),r("h3",{attrs:{id:"_5-django中使用ajax发送post请求时如何通过csrf认证？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-django中使用ajax发送post请求时如何通过csrf认证？"}},[a._v("#")]),a._v(" 5."),r("strong",[a._v("Django中使用AJAX发送POST请求时如何通过CSRF认证？")])]),a._v(" "),r("h3",{attrs:{id:"_6-说说-nginx-和-uwisg-服务器之间如何配合工作的？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-说说-nginx-和-uwisg-服务器之间如何配合工作的？"}},[a._v("#")]),a._v(" 6."),r("strong",[a._v("说说 nginx 和 uWISG 服务器之间如何配合工作的？")])]),a._v(" "),r("h3",{attrs:{id:"_7-说说看django信号-signals-的工作原理-主要应用场景及内置信号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-说说看django信号-signals-的工作原理-主要应用场景及内置信号"}},[a._v("#")]),a._v(" 7."),r("strong",[a._v("说说看Django信号(Signals)的工作原理, 主要应用场景及内置信号")])]),a._v(" "),r("h3",{attrs:{id:"_8-什么是中间件-middleware-，中间件-middleware-的应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-什么是中间件-middleware-，中间件-middleware-的应用场景"}},[a._v("#")]),a._v(" 8."),r("strong",[a._v("什么是中间件(middleware)，中间件(middleware)的应用场景")])]),a._v(" "),r("h3",{attrs:{id:"_9-django有哪些内置中间件及每个中间件的作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-django有哪些内置中间件及每个中间件的作用"}},[a._v("#")]),a._v(" 9."),r("strong",[a._v("Django有哪些内置中间件及每个中间件的作用")])]),a._v(" "),r("h3",{attrs:{id:"_10-django项目中什么时候使用中间件，什么时候使用装饰器？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-django项目中什么时候使用中间件，什么时候使用装饰器？"}},[a._v("#")]),a._v(" 10."),r("strong",[a._v("Django项目中什么时候使用中间件，什么时候使用装饰器？")])]),a._v(" "),r("h3",{attrs:{id:"_11-使用celery执行异步任务时如何给任务设置超时时间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-使用celery执行异步任务时如何给任务设置超时时间"}},[a._v("#")]),a._v(" 11."),r("strong",[a._v("使用Celery执行异步任务时如何给任务设置超时时间?")])]),a._v(" "),r("h3",{attrs:{id:"_12-什么情况下需要自定义context-processors-上下文处理器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-什么情况下需要自定义context-processors-上下文处理器"}},[a._v("#")]),a._v(" 12."),r("strong",[a._v("什么情况下需要自定义context_processors(上下文处理器)")])]),a._v(" "),r("h3",{attrs:{id:"_13-django项目如何实现高并发？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-django项目如何实现高并发？"}},[a._v("#")]),a._v(" 13."),r("strong",[a._v("Django项目如何实现高并发？")])]),a._v(" "),r("h3",{attrs:{id:"_14-什么是wsgi-uwsgi-uwsgi？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-什么是wsgi-uwsgi-uwsgi？"}},[a._v("#")]),a._v(" 14."),r("strong",[a._v("什么是wsgi,uwsgi,uWSGI？")])]),a._v(" "),r("h3",{attrs:{id:"_15-列举5个常用的django第三方库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-列举5个常用的django第三方库"}},[a._v("#")]),a._v(" 15."),r("strong",[a._v("列举5个常用的Django第三方库")])]),a._v(" "),r("h2",{attrs:{id:"model"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#model"}},[a._v("#")]),a._v(" Model")]),a._v(" "),r("h3",{attrs:{id:"_1-django-orm中常用的获取数据查询集的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-django-orm中常用的获取数据查询集的方法"}},[a._v("#")]),a._v(" 1.Django ORM中常用的获取数据查询集的方法")]),a._v(" "),r("p",[a._v("常用方法包括filter和exclude方法。字符串模糊匹配可以使用icontains, in等多种方法。随便举几个例子即可。")]),a._v(" "),r("h3",{attrs:{id:"_2-django和查询集-queryset-有哪些特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-django和查询集-queryset-有哪些特性"}},[a._v("#")]),a._v(" 2. Django和查询集(Queryset)有哪些特性")]),a._v(" "),r("p",[a._v("Django的QuerySet主要有两个特性：一是惰性的(lazy)，二是自带缓存。")]),a._v(" "),r("h3",{attrs:{id:"_3-你能列举几个减少数据库查询次数的方法吗？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-你能列举几个减少数据库查询次数的方法吗？"}},[a._v("#")]),a._v(" 3. 你能列举几个减少数据库查询次数的方法吗？")]),a._v(" "),r("h3",{attrs:{id:"_4-django的模型继承有哪几种方式-它们有什么区别以及何时使用它们"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-django的模型继承有哪几种方式-它们有什么区别以及何时使用它们"}},[a._v("#")]),a._v(" 4.Django的模型继承有哪几种方式? 它们有什么区别以及何时使用它们?")]),a._v(" "),r("h3",{attrs:{id:"_5-什么情况下需要使用select-related和prefetch-related方法以及两者的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-什么情况下需要使用select-related和prefetch-related方法以及两者的区别"}},[a._v("#")]),a._v(" 5."),r("strong",[a._v("什么情况下需要使用select_related和prefetch_related方法以及两者的区别")])]),a._v(" "),r("h3",{attrs:{id:"_6-如何从数据表中获取一个随机对象？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-如何从数据表中获取一个随机对象？"}},[a._v("#")]),a._v(" 6."),r("strong",[a._v("如何从数据表中获取一个随机对象？")])]),a._v(" "),r("h3",{attrs:{id:"_7-说说看aggregate和annotate方法的作用并举几个例子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-说说看aggregate和annotate方法的作用并举几个例子"}},[a._v("#")]),a._v(" 7.说说看aggregate和annotate方法的作用并举几个例子")]),a._v(" "),r("h3",{attrs:{id:"_8-django中如何使用redis做缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-django中如何使用redis做缓存"}},[a._v("#")]),a._v(" 8."),r("strong",[a._v("Django中如何使用redis做缓存?")])]),a._v(" "),r("h3",{attrs:{id:"_9-django项目上传到代码库时是否需要忽略数据库迁移文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-django项目上传到代码库时是否需要忽略数据库迁移文件"}},[a._v("#")]),a._v(" 9."),r("strong",[a._v("Django项目上传到代码库时是否需要忽略数据库迁移文件?")])]),a._v(" "),r("h3",{attrs:{id:"_10-使用f方法更新一个对象或多个对象的某个字段有什么优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-使用f方法更新一个对象或多个对象的某个字段有什么优点"}},[a._v("#")]),a._v(" 10."),r("strong",[a._v("使用F方法更新一个对象或多个对象的某个字段有什么优点?")])]),a._v(" "),r("h2",{attrs:{id:"template"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#template"}},[a._v("#")]),a._v(" Template")]),a._v(" "),r("h3",{attrs:{id:"_1-说说看如何自定义模型标签-templatetags-和过滤器-filter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-说说看如何自定义模型标签-templatetags-和过滤器-filter"}},[a._v("#")]),a._v(" 1.说说看如何自定义模型标签(templatetags)和过滤器(filter)?")]),a._v(" "),r("h3",{attrs:{id:"_2-如何在模板中获取当前访问url地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何在模板中获取当前访问url地址"}},[a._v("#")]),a._v(" 2."),r("strong",[a._v("如何在模板中获取当前访问url地址")])]),a._v(" "),r("h3",{attrs:{id:"_3-django如何生成静态html文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-django如何生成静态html文件"}},[a._v("#")]),a._v(" 3."),r("strong",[a._v("Django如何生成静态html文件")])]),a._v(" "),r("h2",{attrs:{id:"view"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#view"}},[a._v("#")]),a._v(" View")]),a._v(" "),r("h3",{attrs:{id:"_1-什么是基于函数的视图（fbv-和基于类的视图（cbv-以及各自的优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是基于函数的视图（fbv-和基于类的视图（cbv-以及各自的优点"}},[a._v("#")]),a._v(" 1. "),r("strong",[a._v("什么是基于函数的视图（FBV)和基于类的视图（CBV)以及各自的优点")])]),a._v(" "),r("h3",{attrs:{id:"_2-如何给基于类的视图（cbv-使用装饰器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何给基于类的视图（cbv-使用装饰器"}},[a._v("#")]),a._v(" 2. "),r("strong",[a._v("如何给基于类的视图（CBV)使用装饰器")])]),a._v(" "),r("h3",{attrs:{id:"_3-说说看使用基于类的视图-cbv-时get-queryset-get-context-data和get-object方法的作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-说说看使用基于类的视图-cbv-时get-queryset-get-context-data和get-object方法的作用"}},[a._v("#")]),a._v(" 3.说说看使用基于类的视图(CBV)时get_queryset, get_context_data和get_object方法的作用")])])}),[],!1,null,null,null);t.default=e.exports}}]);